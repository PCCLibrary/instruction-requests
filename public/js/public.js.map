{"version":3,"file":"/js/public.js","mappings":"AAAAA,EAAEC,UAAUC,OAAM,WAgBd,SAASC,EAAmBC,GAGxB,GAdAJ,EAAE,sCAAsCK,SAAS,UAAUC,MAAK,WACxDN,EAAEO,MAAMC,KAAK,UAAUC,KAAK,YAC5BT,EAAEO,MAAMC,KAAK,UAAUE,QAAQ,UAEvC,IAUIN,GAASA,KAASO,EAAe,CACjC,IAAMC,EAAWD,EAAcP,GAG/BJ,EAAEY,EAASC,MAAMC,YAAY,UAAUN,KAAK,UAAUE,QAAQ,CAC1DK,MAAO,aACPC,MAAO,SAIXhB,EAAE,sCAAsCQ,KAAK,2BAA2BS,KAAK,YAAY,GAGzFjB,EAAEM,KAAKM,EAASM,UAAU,SAASC,EAAOC,GACtCpB,EAAEoB,GAAUH,KAAK,YAAY,GAC7BjB,EAAE,cAADqB,OAAeD,EAASE,UAAU,GAAE,OAAMjB,SAAS,cACxD,IAGAL,EAAEM,KAAKM,EAASW,aAAa,SAASJ,EAAOC,GACzCpB,EAAEoB,GAAUH,KAAK,YAAY,GAC7BjB,EAAE,cAADqB,OAAeD,EAASE,UAAU,GAAE,OAAMR,YAAY,cAC3D,IAGAd,EAAEM,KAAKM,EAASY,SAAS,SAASL,EAAOC,GACrCpB,EAAEoB,GAAUH,KAAK,YAAY,EACjC,GACJ,CACJ,CAEA,IAAMN,EAAgB,CAClB,YAAa,CACTE,KAAM,aACNK,SAAU,CAAC,sBAAuB,aAAc,sBAAuB,aACvEK,YAAa,CAAC,gBAAiB,uCAAwC,uBACvEC,QAAS,CAAC,yCAEd,OAAU,CACNX,KAAM,UACNK,SAAU,CAAC,gBAAiB,sBAAuB,YAAa,cAChEK,YAAa,CAAC,sBAAuB,uCAAwC,uBAC7EC,QAAS,CAAC,yCAEd,aAAgB,CACZX,KAAM,gBACNK,SAAU,CAAC,uCAAwC,cACnDK,YAAa,CAAC,gBAAiB,sBAAuB,sBAAuB,sBAAuB,aACpGC,QAAS,CAAC,gBAAiB,sBAAuB,sBAAuB,eAKjFxB,EAAE,8BAA8BU,QAAQ,CACpCK,MAAO,aACPC,MAAO,OACPS,YAAa,WACT,OAAOzB,EAAEO,MAAME,KAAK,cACxB,IAGJ,IAAIiB,EAAwB1B,EAAE,mCAC9BG,EAAmBuB,EAAsBC,OAEzCD,EAAsBE,QAAO,WACzBzB,EAAmBH,EAAEO,MAAMoB,MAC/B,GACJ","sources":["webpack:///./resources/js/public.js"],"sourcesContent":["$(document).ready(function() {\n    /**\n     * Hide all fieldsets and destroy Select2 instances if initialized.\n     */\n    function hideAllFieldsets() {\n        $('.on-campus, .remote, .asynchronous').addClass('d-none').each(function() {\n            if ($(this).find('select').data('select2')) {\n                $(this).find('select').select2('destroy');\n            }\n        });\n    }\n\n    /**\n     * Apply field settings based on the selected instruction type.\n     * @param {string} value - The selected instruction type value.\n     */\n    function applyFieldSettings(value) {\n        hideAllFieldsets(); // Hide all fieldsets first.\n\n        if (value && value in fieldSettings) {\n            const settings = fieldSettings[value];\n\n            // Show the relevant fieldset\n            $(settings.show).removeClass('d-none').find('select').select2({\n                theme: 'bootstrap4',\n                width: '100%'\n            });\n\n            // Enable all fields before applying specific disabled settings\n            $('.on-campus, .remote, .asynchronous').find('input, select, textarea').prop('disabled', false);\n\n            // Set fields as required\n            $.each(settings.required, function(index, selector) {\n                $(selector).prop('required', true);\n                $(`label[for=\"${selector.substring(1)}\"]`).addClass('is-required');\n            });\n\n            // Set fields as not required\n            $.each(settings.notRequired, function(index, selector) {\n                $(selector).prop('required', false);\n                $(`label[for=\"${selector.substring(1)}\"]`).removeClass('is-required');\n            });\n\n            // Disable specific fields\n            $.each(settings.disable, function(index, selector) {\n                $(selector).prop('disabled', true);\n            });\n        }\n    }\n\n    const fieldSettings = {\n        'on-campus': {\n            show: '.on-campus',\n            required: ['#number_of_students', '#campus_id', '#preferred_datetime', '#duration'],\n            notRequired: [\"#librarian_id\", \"#asynchronous_instruction_ready_date\", \"#alternate_datetime\"],\n            disable: [\"#asynchronous_instruction_ready_date\"]\n        },\n        'remote': {\n            show: '.remote',\n            required: ['#librarian_id', '#preferred_datetime', '#duration', '#campus_id'],\n            notRequired: ['#number_of_students', \"#asynchronous_instruction_ready_date\", \"#alternate_datetime\"],\n            disable: [\"#asynchronous_instruction_ready_date\"]\n        },\n        'asynchronous': {\n            show: '.asynchronous',\n            required: ['#asynchronous_instruction_ready_date', '#campus_id'],\n            notRequired: ['#librarian_id', '#number_of_students', '#preferred_datetime', '#alternate_datetime', '#duration'],\n            disable: ['#librarian_id', '#preferred_datetime', '#alternate_datetime', '#duration']\n        }\n    };\n\n    // Initialize select elements\n    $('#librarian_id, #department').select2({\n        theme: 'bootstrap4',\n        width: '100%',\n        placeholder: function() {\n            return $(this).data('placeholder');\n        }\n    });\n\n    let instructionTypeSelect = $('select[name=\"instruction_type\"]');\n    applyFieldSettings(instructionTypeSelect.val()); // Apply initial settings\n\n    instructionTypeSelect.change(function() {\n        applyFieldSettings($(this).val());\n    });\n});\n"],"names":["$","document","ready","applyFieldSettings","value","addClass","each","this","find","data","select2","fieldSettings","settings","show","removeClass","theme","width","prop","required","index","selector","concat","substring","notRequired","disable","placeholder","instructionTypeSelect","val","change"],"sourceRoot":""}